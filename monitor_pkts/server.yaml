apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: configmap-operation-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: configmap-watcher-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
    # resourceNames:
    # - rtpengine-controller
  verbs:
  - create
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
    # resourceNames:
    # - rtpengine-controller
  verbs:
  - create
  - get
  - watch
  - list
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: rtpengine-service-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configmap-watcher-role
subjects:
- kind: ServiceAccount
  name: configmap-operation-sa
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fake-rtpengine-daemon
spec:
  selector:
    matchLabels:
      app: demo-server
  template:
    metadata:
      labels:
        app: demo-server
    spec:
      serviceAccountName: configmap-operation-sa
      nodeSelector:
        fast-network: "true"
      volumes:
        - name: cache-subscriber-volume
          configMap:
            name: cache-subscriber-config
      containers:
        - name: rtpengine
          image: efficacy38/demo-server
          imagePullPolicy: Always
          # image: ubuntu
          command: ["sleep", "infinity"]
          volumeMounts:
          - name: cache-subscriber-volume
            mountPath: /etc/config
          env:
            - name: PYTHONUNBUFFERED
              value: "0" 
---
apiVersion: v1
kind: Service
metadata:
  name: demo-service
spec:
  type: LoadBalancer
  selector:
    ip: 10.22.22.53
  ports:
    - name: fake-rtp
      protocol: UDP
      port: 4000
      targetPort: 7000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cache-subscriber-config
  namespace: default
data:
  subscriber: ""
